---
- name: Manage logs on Jumpserver
  hosts: localhost
  gather_facts: false
  vars:
    script_base_path: "/logarchival/"
    audit_log_dir: "/logarchival/logs/"
    audit_log_file: "{{ audit_log_dir }}/manage_logs_output_{{ ansible_date_time.iso8601_basic }}.log"

  tasks:
    - name: Ensure audit log directory exists
      ansible.builtin.file:
        path: "{{ audit_log_dir }}"
        state: directory
        mode: '0755'

    - name: Validate operation and mode
      ansible.builtin.assert:
        that:
          - operation is defined
          - operation in ['compress', 'archive', 'delete']
          - mode is defined
          - mode in ['dry-run', 'actual-run']
        fail_msg: >
          You must specify 'operation' as one of ['compress', 'archive', 'delete']
          and 'mode' as one of ['dry-run', 'actual-run'].
          Usage example: -e operation=compress -e mode=dry-run

    - name: Define script mapping
      ansible.builtin.set_fact:
        script_map:
          compress: "compress_logs.py"
          archive: "archive_logs.py"
          delete: "delete_logs.py"

    - name: Execute the appropriate script
      ansible.builtin.command:
        cmd: >
          python3 "{{ script_base_path }}/{{ script_map[operation] }}"
          {% if mode == 'dry-run' %}--dry-run{% endif %}
      register: script_output
      changed_when: false
      when: script_map[operation] is defined

    - name: Append script output to audit log
      ansible.builtin.copy:
        content: |
          ==== {{ operation | capitalize }} Logs Output ({{ mode }}) ====
          {% if script_output is defined and script_output.stdout is defined %}
          STDOUT:
          {{ script_output.stdout }}
          {% else %}
          No standard output captured.
          {% endif %}
          {% if script_output is defined and script_output.stderr is defined %}
          STDERR:
          {{ script_output.stderr }}
          {% else %}
          No error output captured.
          {% endif %}
          ------------------------------------------------------
        dest: "{{ audit_log_file }}"
        force: no
      when: script_output is defined
